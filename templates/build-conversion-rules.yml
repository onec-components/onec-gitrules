spec:
  inputs:
    input_dir:
      description: "Каталог с правилами конвертации для сборки"
    output_dir:
      description: "Каталог с результатом сборки"
      default: "build/rules"
    gitrules_image:
      default: "sleemp/gitrules:1.1.2"
      description: "Образ gitrules"
    stage:
      default: "build"
---
build-conversion-rules:
  stage: $[[ inputs.stage ]]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_TAG'
  image: 
    name: $[[ inputs.gitrules_image ]]
    entrypoint: [""]
  script:
    - |
      set -e
      gitrules assembly $[[ inputs.input_dir ]] $[[ inputs.output_dir ]]
      if [ -n "$CI_COMMIT_TAG" ]; then
        ASSET_NAME="rules-$CI_COMMIT_TAG.tar.gz"
      else
        ASSET_NAME="rules-$CI_COMMIT_SHORT_SHA.tar.gz"
      fi
      tar -czf "$ASSET_NAME" -C "$[[ inputs.output_dir ]]" .
      echo "BUILD_JOB_ID=$CI_JOB_ID" >> build.env
      echo "ASSET_NAME=$ASSET_NAME" >> build.env
  artifacts:
    paths:
      - $ASSET_NAME
    expire_in: 1 week
    when: on_success
    reports:
      dotenv: build.env
  